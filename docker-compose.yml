services:
  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./srcs/nginx
      dockerfile: Dockerfile
    ports:
      - "8443:443"
    depends_on:
      - user-management
      - pong-game
    volumes:
      - ./srcs/front:/etc/frontend
      - ./srcs/nginx/ssl:/etc/nginx/ssl

  user-management:
    build:
      context: ./srcs/user_management
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./srcs/nginx/ssl:/etc/ssl
    command: python manage.py runserver 0.0.0.0:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3

  pong-game:
    build:
      context: ./srcs/pong_game
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  cli-game:
    build:
      context: ./srcs/cli_game
      dockerfile: Dockerfile
    container_name: cli-game
    depends_on:
      - user-management
    stdin_open: true
    tty: true

volumes:
  postgres_data:

networks:
  default:
    name: app_network