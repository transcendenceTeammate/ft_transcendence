services:
  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./srcs/nginx
      dockerfile: Dockerfile
    ports:
      - "8443:443"
    depends_on:
      - user_management
      - pong_game
    volumes:
      - ./srcs/front:/etc/frontend
      - ./srcs/nginx/ssl:/etc/nginx/ssl

  user_management:
    build:
      context: ./srcs/user_management
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
      - ADMIN_USERNAME=admin
      - ADMIN_EMAIL=admin@example.com
      - ADMIN_PASSWORD=adminpassword
    ports:
      - "8000:8000"
  pong_game:
    build:
      context: ./srcs/pong_game
      dockerfile: Dockerfile
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8001:8000"

volumes:
  postgres_data:

networks:
  default:
    name: app_network