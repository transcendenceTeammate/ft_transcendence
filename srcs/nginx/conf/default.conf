server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name 10.24.108.2.nip.io;

    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    location / {
        include snippets/cors.conf;
        return 301 https://app.10.24.108.2.nip.io:8443;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name api.app.10.24.108.2.nip.io;

    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    location /api/room/ {
        proxy_pass http://pong-game:8000;
        client_max_body_size 5M;
        include snippets/cors.conf;
        error_page 400 @return_400;
        error_page 403 @return_403;
        error_page 405 @return_405;
        error_page 500 @return_500;
    }

    location / {
        proxy_pass http://user-management:8000;
        client_max_body_size 5M;
        include snippets/cors.conf;
        error_page 400 @return_400;
        error_page 403 @return_403;
        error_page 405 @return_405;
        error_page 500 @return_500;
    }

    location /ws/ {
        proxy_pass http://user-management:8000;
        include snippets/websocket.conf;
        include snippets/cors.conf;

        error_page 400 @return_400;
        error_page 403 @return_403;
        error_page 405 @return_405;
        error_page 500 @return_500;
    }

    location /media/ {
        alias /app/media/;
        autoindex off;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name app.10.24.108.2.nip.io;

    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    location / {
        root /etc/frontend;
        index index.html;
        try_files $uri $uri/ /index.html;
        include snippets/cors.conf;
        error_page 403 @redirect_403;
    }

    location /media {
        alias /etc/frontend/media;
    }

    location /ws {
        proxy_pass http://pong-game:8000;
        include snippets/websocket.conf;
    }

    location /wsapi {
        proxy_pass http://pong-game:8000;
        include snippets/websocket.conf;
    }

    location @return_400 { internal; return 400 "Request too large"; }
    location @return_403 { internal; return 403 "Forbidden request"; }
    location @return_405 { internal; return 405 "Method not allowed"; }
    location @return_500 { internal; return 500 "Internal server error"; }

    location @redirect_403 {
        internal;
        root /etc/nginx/modsec/;
        rewrite ^ /error.html break;
    }
}